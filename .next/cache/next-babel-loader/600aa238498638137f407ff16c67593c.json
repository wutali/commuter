{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/defineProperty\";\nimport * as React from \"react\";\n\nvar HTMLView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HTMLView, _React$Component);\n\n  function HTMLView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HTMLView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HTMLView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ifr\", void 0);\n\n    return _this;\n  }\n\n  _createClass(HTMLView, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          position: \"fixed\",\n          width: \"100%\",\n          height: \"100%\"\n        }\n      }, React.createElement(\"iframe\", {\n        title: \"view of \".concat(this.props.entry.path),\n        sandbox: \"allow-scripts\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          border: \"none\",\n          margin: \"0\",\n          padding: \"0\",\n          display: \"block\"\n        },\n        srcDoc: this.props.entry.content,\n        ref: function ref(f) {\n          _this2.ifr = f;\n        },\n        height: \"100%\",\n        width: \"100%\"\n      }));\n    }\n  }]);\n\n  return HTMLView;\n}(React.Component);\n\nexport { HTMLView as default };","map":null,"metadata":{},"sourceType":"module"}