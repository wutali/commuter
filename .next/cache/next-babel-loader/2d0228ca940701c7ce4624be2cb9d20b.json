{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/inherits\";\nimport * as React from \"react\"; // const d3 = Object.assign({}, require(\"d3-dsv\"));\n// import DataTransform from \"@nteract/transform-dataresource\";\n\nvar CSVView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CSVView, _React$Component);\n\n  function CSVView() {\n    _classCallCheck(this, CSVView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CSVView).apply(this, arguments));\n  }\n\n  _createClass(CSVView, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      return false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // const data = d3.csvParse(this.props.entry.content);\n      return React.createElement(\"div\", null, \"No support for csv at this time\"); // return <DataTransform data={{ data }} metadata={{}} theme=\"light\" />;\n    }\n  }]);\n\n  return CSVView;\n}(React.Component);\n\nexport { CSVView as default };","map":{"version":3,"sources":["/home/wutali/Workspace/wutali/commuter/components/contents/csv.js"],"names":["React","CSVView","Component"],"mappings":";;;;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;AACA;;IAEqBC,O;;;;;;;;;;;;;4CACK;AACtB,aAAO,KAAP;AACD;;;6BAEQ;AACP;AACA,aAAO,mEAAP,CAFO,CAGP;AACD;;;;EATkCD,KAAK,CAACE,S;;SAAtBD,O","sourcesContent":["// @flow\nimport * as React from \"react\";\n\n// const d3 = Object.assign({}, require(\"d3-dsv\"));\n// import DataTransform from \"@nteract/transform-dataresource\";\n\nexport default class CSVView extends React.Component<*> {\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  render() {\n    // const data = d3.csvParse(this.props.entry.content);\n    return <div>No support for csv at this time</div>;\n    // return <DataTransform data={{ data }} metadata={{}} theme=\"light\" />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}